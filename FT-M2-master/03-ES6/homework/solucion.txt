var traverseDomAndCollectElements = function(matchFunc, startEl) {
  var resultSet = [];
​
  if (typeof startEl === "undefined") {
    startEl = document.body;
  }
​
  // recorre el árbol del DOM y recolecta elementos que matchien en resultSet
  // usa matchFunc para identificar elementos que matchien
​
  // TU CÓDIGO AQUÍ
  if(matchFunc(startEl)) resultSet.push(startEl)
​
  for (let i = 0; i < startEl.children.length; i++) {
    let child = startEl.children[i]
    let elementFound = traverseDomAndCollectElements(matchFunc, child)
    resultSet = [...resultSet, ...elementFound]
  }
​
​
 return resultSet
};
//  <body class='classA'>
//    <div>
//        <p class='classA'>
//        </p>
//      </div>
//  </body>
/* traverseDomAndCollectElements(body) STOP
  return [body, p]
 */
    
//
// Detecta y devuelve el tipo de selector
// devuelve uno de estos tipos: #id, .class, tag.class, tag
​
//                                  .classA
var selectorTypeMatcher = function(selector) {
  // tu código aquí
  if(selector[0] === '#') return 'id'
  if(selector[0] === '.') return 'class'
  if(selector.split('.').length === 2) return 'tag.class'
  return 'tag'
};
​
// NOTA SOBRE LA FUNCIÓN MATCH
// recuerda, la función matchFunction devuelta toma un elemento como un
// parametro y devuelve true/false dependiendo si el elemento
// matchea el selector.
​
//                               .classA
// <div class='classA classB'></div>
// var div
//div.classList = ['classA', 'classB']
// var function = function(elemto){
//  return...
// } 
​
var matchFunctionMaker = function(selector) {
  var selectorType = selectorTypeMatcher(selector); // class
  var matchFunction;
  if (selectorType === "id") { 
    // element (ELEMENTO HTML) tiene el ID que estoy buscando
   matchFunction = function(elemento) {
    return '#' + elemento.id === selector
   }
  } else if (selectorType === "class") {
    matchFunction = function(elemento) {
      let classes = elemento.classList
      for (let i = 0; i < classes.length; i++) {
        if('.' + classes[i] === selector) return true
      }
      return false
    }
  } else if (selectorType === "tag.class") { //                       t    c
    matchFunction = function(elemento) { // div.classA.spli('.') => [div, class]
      let [t, c] = selector.split('.')
      return matchFunctionMaker(t)(elemento) && matchFunctionMaker('.' + c)(elemento)
    }
​
  } else if (selectorType === "tag") {
    matchFunction = function(elemento) {
      return elemento.localName === selector
    }
  }
  return matchFunction;
};
​
//               .classA
var $ = function(selector) {
  var elements;
  var selectorMatchFunc = matchFunctionMaker(selector);
  elements = traverseDomAndCollectElements(selectorMatchFunc);
  return elements;
};
​
​
/* document.querySelector('#idA') -> // id
document.querySelector('.classA') -> // class
document.querySelector('div') -> // tag
document.querySelector('div.classA') -> // tag.class
​
// Crear nuestra propia libreria
$.('.classA')
$.('#id')
$.('div') */